//https://cses.fi/problemset/task/1131/
#include<iostream>
#include<queue>
using namespace std;
using ll=long long;
vector<int> edges[2000001];
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int n;
    cin>>n;
    for (int i=1;i<n;i++){
    	int a,b;
    	cin>>a>>b;
    	edges[a].push_back(b);
    	edges[b].push_back(a);
    }
    int x;
    queue<int> q;
    vector<bool> visited(n+1);
    q.push(1);
    visited[1]=true;  
    while(!q.empty()){
    	x=q.front();
    	q.pop();
    	for (int i:edges[x]){
    		if (!visited[i]) q.push(i);
    		visited[i]=true;
    	}
    }  
    
    visited.assign(n+1,false);
    q.push(x);
    visited[x]=true;
    vector<int> pre(n+1);
    while(!q.empty()){
    	x=q.front();
    	q.pop();
    	for (int i:edges[x]){
    		if (!visited[i]) {
    			q.push(i);
    			pre[i]=x;
    			visited[i]=true;
    		}
    	}
    }
    int ans=0;
    while(pre[x]!=0){
    	ans++;
    	x=pre[x];
    }
    cout<<ans<<endl;
}
