//https://cses.fi/problemset/task/1132/
#include<bits/stdc++.h>
using namespace std;

using ll=long long;

const int N=2e5+1;
vector<int> V[N];
vector<int> dist(N);
int bfs(int source)
{
	int last;
	queue<int> q;
	vector<int> dis(N,-1);
	dis[source]=0;
	q.push(source);	
	while(!q.empty()){
		last=q.front();
		q.pop();
		for (int i:V[last]){
			if (dis[i]==-1){
				q.push(i);
				dis[i]=dis[last]+1;
				dist[i]=max(dist[i],dis[i]);
			}
		}
	}
	return last;
}
int main()
{
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    
    int n;
    cin>>n;
    for (int i=0;i<n-1;i++){
    	int a,b;
    	cin>>a>>b;
    	V[a].push_back(b);
    	V[b].push_back(a);
    }
    int d1=bfs(1);
    int d2=bfs(d1);
    bfs(d2);
    for (int i=1;i<=n;i++) cout<<dist[i]<<' ';
    cout<<endl;
}
    
